<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Readings Overview</title>
    <style>
        th {
            cursor: pointer;
        }
        .arrow-up:after {
            content: '\2191';
            padding-left: 5px;
        }

        .arrow-down:after {
            content: '\2193';
            padding-left: 5px;
        }
    </style>
</head>
<%- include('nav.html') %>

<body>
<form action="/overview" method="get">
    <label for="date">Date: </label>
    <input type="date" id="date" name="date" >
    <input type="submit" value="Submit">
</form>
<h1>Readings Overview</h1>
<table id="readingstable">
    <thead>
    <tr>
        <th onclick="sortTable('temperature')">Temperature (Â°C) <span class="sort-arrow"></span></th>
        <th onclick="sortTable('humidity')">Humidity (%) <span class="sort-arrow"></span></th>
        <th onclick="sortTable('date')">Date <span class="sort-arrow"></span></th>
        <th onclick="sortTable('time')">Time <span class="sort-arrow"></span></th>
    </tr>
    </thead>
    <tbody>
    <% readings.forEach(reading => { %>
        <tr>
            <td><%= reading.temperature %></td>
            <td><%= reading.humidity %></td>
            <td><%= reading.date %></td>
            <td><%= reading.time %></td>
        </tr>
    <% }); %>
    </tbody>
</table>
<script>
    function sortTable(columnName) {
        const table = document.getElementById('readingstable');
        const tbody = table.tBodies[0];
        const rows = Array.from(tbody.querySelectorAll('tr'));

        const sortFactor = table.getAttribute('data-sort-factor') === '1' ? -1 : 1;
        table.setAttribute('data-sort-factor', sortFactor);

        rows.sort((a, b) => {
            const aValue = a.querySelector(`td:nth-child(${columnNameIndex[columnName]})`).textContent.trim();
            const bValue = b.querySelector(`td:nth-child(${columnNameIndex[columnName]})`).textContent.trim();

            if (!isNaN(aValue) && !isNaN(bValue)) {
                return sortFactor * (parseFloat(aValue) - parseFloat(bValue));
            } else {
                return sortFactor * aValue.localeCompare(bValue);
            }
        });

        tbody.innerHTML = '';
        rows.forEach(row => {
            tbody.appendChild(row);
        });

        const arrows = table.querySelectorAll('.sort-arrow');
        arrows.forEach(arrow => {
            arrow.textContent = '';
        });

        const currentArrow = table.querySelector(`th:nth-child(${columnNameIndex[columnName]}) .sort-arrow`);
        currentArrow.textContent = sortFactor === 1 ? '\u2191' : '\u2193';
    }

    const columnNameIndex = {
        'temperature': 1,
        'humidity': 2,
        'date': 3,
        'time': 4
    };
</script>
</body>
</html>
